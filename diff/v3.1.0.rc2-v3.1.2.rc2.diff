diff -Nru v3.1.0.rc2/.gitignore v3.1.2.rc2/.gitignore
--- v3.1.0.rc2/.gitignore	2012-08-01 09:42:03.000000000 -0400
+++ v3.1.2.rc2/.gitignore	2012-07-26 23:32:39.000000000 -0400
@@ -1,5 +1,15 @@
-.bundle
-db/*.sqlite3
-log/*.log
-tmp/
-.sass-cache/
+# See http://help.github.com/ignore-files/ for more about ignoring files.
+#
+# If you find yourself ignoring temporary files generated by your text editor
+# or operating system, you probably want to add a global ignore instead:
+#   git config --global core.excludesfile ~/.gitignore_global
+
+# Ignore bundler config
+/.bundle
+
+# Ignore the default SQLite database.
+/db/*.sqlite3
+
+# Ignore all logfiles and tempfiles.
+/log/*.log
+/tmp
diff -Nru v3.1.0.rc2/Gemfile v3.1.2.rc2/Gemfile
--- v3.1.0.rc2/Gemfile	2012-08-01 09:42:03.000000000 -0400
+++ v3.1.2.rc2/Gemfile	2012-07-26 23:32:39.000000000 -0400
@@ -1,19 +1,26 @@
 source 'http://rubygems.org'
 
-gem 'rails', '3.1.0.rc2'
+gem 'rails', '3.1.2.rc2'
 
 # Bundle edge Rails instead:
 # gem 'rails',     :git => 'git://github.com/rails/rails.git'
 
 gem 'sqlite3'
 
-# Asset template engines
-gem 'sass-rails', "~> 3.1.0.rc"
-gem 'coffee-script'
-gem 'uglifier'
+
+# Gems used only for assets and not required
+# in production environments by default.
+group :assets do
+  gem 'sass-rails',   '~> 3.1.5.rc.2'
+  gem 'coffee-rails', '~> 3.1.1'
+  gem 'uglifier', '>= 1.0.3'
+end
 
 gem 'jquery-rails'
 
+# To use ActiveModel has_secure_password
+# gem 'bcrypt-ruby', '~> 3.0.0'
+
 # Use unicorn as the web server
 # gem 'unicorn'
 
@@ -25,5 +32,5 @@
 
 group :test do
   # Pretty printed test output
-  gem 'turn', :require => false
+  gem 'turn', '~> 0.8.3', :require => false
 end
diff -Nru v3.1.0.rc2/config/application.rb v3.1.2.rc2/config/application.rb
--- v3.1.0.rc2/config/application.rb	2012-08-01 09:42:03.000000000 -0400
+++ v3.1.2.rc2/config/application.rb	2012-07-26 23:32:39.000000000 -0400
@@ -2,9 +2,12 @@
 
 require 'rails/all'
 
-# If you have a Gemfile, require the gems listed there, including any gems
-# you've limited to :test, :development, or :production.
-Bundler.require(:default, Rails.env) if defined?(Bundler)
+if defined?(Bundler)
+  # If you precompile assets before deploying to production, use this line
+  Bundler.require(*Rails.groups(:assets => %w(development test)))
+  # If you want your assets lazily compiled in production, use this line
+  # Bundler.require(:default, :assets, Rails.env)
+end
 
 module Railsdiff
   class Application < Rails::Application
@@ -38,5 +41,8 @@
 
     # Enable the asset pipeline
     config.assets.enabled = true
+
+    # Version of your assets, change this if you want to expire all your assets
+    config.assets.version = '1.0'
   end
 end
diff -Nru v3.1.0.rc2/config/environments/development.rb v3.1.2.rc2/config/environments/development.rb
--- v3.1.0.rc2/config/environments/development.rb	2012-08-01 09:42:03.000000000 -0400
+++ v3.1.2.rc2/config/environments/development.rb	2012-07-26 23:32:39.000000000 -0400
@@ -24,4 +24,7 @@
 
   # Do not compress assets
   config.assets.compress = false
+
+  # Expands the lines which load the assets
+  config.assets.debug = true
 end
diff -Nru v3.1.0.rc2/config/environments/production.rb v3.1.2.rc2/config/environments/production.rb
--- v3.1.0.rc2/config/environments/production.rb	2012-08-01 09:42:03.000000000 -0400
+++ v3.1.2.rc2/config/environments/production.rb	2012-07-26 23:32:39.000000000 -0400
@@ -14,12 +14,18 @@
   # Compress JavaScripts and CSS
   config.assets.compress = true
 
-  # Specify the default JavaScript compressor
-  config.assets.js_compressor  = :uglifier
+  # Don't fallback to assets pipeline if a precompiled asset is missed
+  config.assets.compile = false
+
+  # Generate digests for assets URLs
+  config.assets.digest = true
+
+  # Defaults to Rails.root.join("public/assets")
+  # config.assets.manifest = YOUR_PATH
 
   # Specifies the header that your server uses for sending files
-  # (comment out if your front-end server doesn't support this)
-  config.action_dispatch.x_sendfile_header = "X-Sendfile" # Use 'X-Accel-Redirect' for nginx
+  # config.action_dispatch.x_sendfile_header = "X-Sendfile" # for apache
+  # config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect' # for nginx
 
   # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
   # config.force_ssl = true
diff -Nru v3.1.0.rc2/config/initializers/wrap_parameters.rb v3.1.2.rc2/config/initializers/wrap_parameters.rb
--- v3.1.0.rc2/config/initializers/wrap_parameters.rb	2012-08-01 09:42:03.000000000 -0400
+++ v3.1.2.rc2/config/initializers/wrap_parameters.rb	2012-07-26 23:32:39.000000000 -0400
@@ -4,9 +4,11 @@
 # is enabled by default.
 
 # Enable parameter wrapping for JSON. You can disable this by setting :format to an empty array.
-ActionController::Base.wrap_parameters format: [:json]
+ActiveSupport.on_load(:action_controller) do
+  wrap_parameters format: [:json]
+end
 
 # Disable root element in JSON by default.
-if defined?(ActiveRecord)
-  ActiveRecord::Base.include_root_in_json = false
+ActiveSupport.on_load(:active_record) do
+  self.include_root_in_json = false
 end
