diff -Nr -U 1000 v4.1.0.beta2/Gemfile v4.1.0.rc2/Gemfile
--- v4.1.0.beta2/Gemfile	2014-02-22 04:31:13.000000000 +0100
+++ v4.1.0.rc2/Gemfile	2014-03-25 22:39:16.000000000 +0100
@@ -1,48 +1,40 @@
 source 'https://rubygems.org'
 
 
 # Bundle edge Rails instead: gem 'rails', github: 'rails/rails'
-gem 'rails', '4.1.0.beta2'
-
+gem 'rails', '4.1.0.rc2'
 # Use sqlite3 as the database for Active Record
 gem 'sqlite3'
-
 # Use SCSS for stylesheets
-gem 'sass-rails', '~> 4.0.0.rc1'
-
+gem 'sass-rails', '~> 4.0.2'
 # Use Uglifier as compressor for JavaScript assets
 gem 'uglifier', '>= 1.3.0'
-
 # Use CoffeeScript for .js.coffee assets and views
 gem 'coffee-rails', '~> 4.0.0'
-
 # See https://github.com/sstephenson/execjs#readme for more supported runtimes
 # gem 'therubyracer',  platforms: :ruby
 
 # Use jquery as the JavaScript library
 gem 'jquery-rails'
-
 # Turbolinks makes following links in your web application faster. Read more: https://github.com/rails/turbolinks
 gem 'turbolinks'
-
 # Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder
-gem 'jbuilder', '~> 1.2'
-
+gem 'jbuilder', '~> 2.0'
 # bundle exec rake doc:rails generates the API under doc/api.
-gem 'sdoc',          group: :doc, require: false
+gem 'sdoc', '~> 0.4.0',          group: :doc
 
-# Spring speeds up development by keeping your application running in the background. Read more: https://github.com/jonleighton/spring
+# Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring
 gem 'spring',        group: :development
 
 # Use ActiveModel has_secure_password
-# gem 'bcrypt-ruby', '~> 3.1.2'
+# gem 'bcrypt', '~> 3.1.7'
 
 # Use unicorn as the app server
 # gem 'unicorn'
 
 # Use Capistrano for deployment
 # gem 'capistrano-rails', group: :development
 
 # Use debugger
 # gem 'debugger', group: [:development, :test]
 
diff -Nr -U 1000 v4.1.0.beta2/app/views/layouts/application.html.erb v4.1.0.rc2/app/views/layouts/application.html.erb
--- v4.1.0.beta2/app/views/layouts/application.html.erb	2014-02-22 04:31:13.000000000 +0100
+++ v4.1.0.rc2/app/views/layouts/application.html.erb	2014-03-25 22:39:16.000000000 +0100
@@ -1,14 +1,14 @@
 <!DOCTYPE html>
 <html>
 <head>
   <title>Railsdiff</title>
-  <%= stylesheet_link_tag    "application", media: "all", "data-turbolinks-track" => true %>
-  <%= javascript_include_tag "application", "data-turbolinks-track" => true %>
+  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
+  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
   <%= csrf_meta_tags %>
 </head>
 <body>
 
 <%= yield %>
 
 </body>
 </html>
diff -Nr -U 1000 v4.1.0.beta2/config/database.yml v4.1.0.rc2/config/database.yml
--- v4.1.0.beta2/config/database.yml	2014-02-22 04:31:13.000000000 +0100
+++ v4.1.0.rc2/config/database.yml	2014-03-25 22:39:16.000000000 +0100
@@ -1,25 +1,30 @@
 # SQLite version 3.x
 #   gem install sqlite3
 #
 #   Ensure the SQLite 3 gem is defined in your Gemfile
 #   gem 'sqlite3'
 #
 default: &default
   adapter: sqlite3
   pool: 5
   timeout: 5000
 
 development:
   <<: *default
   database: db/development.sqlite3
 
 # Warning: The database defined as "test" will be erased and
 # re-generated from your development database when you run "rake".
 # Do not set this db to the same as development or production.
 test:
   <<: *default
   database: db/test.sqlite3
 
+# Do not keep production credentials in the repository,
+# instead read the configuration from the environment.
+#
+# Example:
+#   sqlite3://myuser:mypass@localhost/full/path/to/somedatabase
+#
 production:
-  <<: *default
-  database: db/production.sqlite3
+  url: <%= ENV["DATABASE_URL"] %>
diff -Nr -U 1000 v4.1.0.beta2/config/environments/development.rb v4.1.0.rc2/config/environments/development.rb
--- v4.1.0.beta2/config/environments/development.rb	2014-02-22 04:31:13.000000000 +0100
+++ v4.1.0.rc2/config/environments/development.rb	2014-03-25 22:39:16.000000000 +0100
@@ -1,29 +1,37 @@
 Rails.application.configure do
   # Settings specified here will take precedence over those in config/application.rb.
 
   # In the development environment your application's code is reloaded on
   # every request. This slows down response time but is perfect for development
   # since you don't have to restart the web server when you make code changes.
   config.cache_classes = false
 
   # Do not eager load code on boot.
   config.eager_load = false
 
   # Show full error reports and disable caching.
   config.consider_all_requests_local       = true
   config.action_controller.perform_caching = false
 
   # Don't care if the mailer can't send.
   config.action_mailer.raise_delivery_errors = false
 
   # Print deprecation notices to the Rails logger.
   config.active_support.deprecation = :log
 
   # Raise an error on page load if there are pending migrations.
   config.active_record.migration_error = :page_load
 
   # Debug mode disables concatenation and preprocessing of assets.
   # This option may cause significant delays in view rendering with a large
   # number of complex assets.
   config.assets.debug = true
+
+  # Adds additional error checking when serving assets at runtime.
+  # Checks for improperly declared sprockets dependencies.
+  # Raises helpful error messages.
+  config.assets.raise_runtime_errors = true
+
+  # Raises error for missing translations
+  # config.action_view.raise_on_missing_translations = true
 end
diff -Nr -U 1000 v4.1.0.beta2/config/environments/production.rb v4.1.0.rc2/config/environments/production.rb
--- v4.1.0.beta2/config/environments/production.rb	2014-02-22 04:31:13.000000000 +0100
+++ v4.1.0.rc2/config/environments/production.rb	2014-03-25 22:39:16.000000000 +0100
@@ -1,80 +1,83 @@
 Rails.application.configure do
   # Settings specified here will take precedence over those in config/application.rb.
 
   # Code is not reloaded between requests.
   config.cache_classes = true
 
   # Eager load code on boot. This eager loads most of Rails and
-  # your application in memory, allowing both thread web servers
+  # your application in memory, allowing both threaded web servers
   # and those relying on copy on write to perform better.
   # Rake tasks automatically ignore this option for performance.
   config.eager_load = true
 
   # Full error reports are disabled and caching is turned on.
   config.consider_all_requests_local       = false
   config.action_controller.perform_caching = true
 
   # Enable Rack::Cache to put a simple HTTP cache in front of your application
   # Add `rack-cache` to your Gemfile before enabling this.
   # For large-scale production use, consider using a caching reverse proxy like nginx, varnish or squid.
   # config.action_dispatch.rack_cache = true
 
   # Disable Rails's static asset server (Apache or nginx will already do this).
   config.serve_static_assets = false
 
   # Compress JavaScripts and CSS.
   config.assets.js_compressor = :uglifier
   # config.assets.css_compressor = :sass
 
   # Do not fallback to assets pipeline if a precompiled asset is missed.
   config.assets.compile = false
 
   # Generate digests for assets URLs.
   config.assets.digest = true
 
   # Version of your assets, change this if you want to expire all your assets.
   config.assets.version = '1.0'
 
   # Specifies the header that your server uses for sending files.
   # config.action_dispatch.x_sendfile_header = "X-Sendfile" # for apache
   # config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect' # for nginx
 
   # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
   # config.force_ssl = true
 
   # Set to :debug to see everything in the log.
   config.log_level = :info
 
   # Prepend all log lines with the following tags.
   # config.log_tags = [ :subdomain, :uuid ]
 
   # Use a different logger for distributed setups.
   # config.logger = ActiveSupport::TaggedLogging.new(SyslogLogger.new)
 
   # Use a different cache store in production.
   # config.cache_store = :mem_cache_store
 
   # Enable serving of images, stylesheets, and JavaScripts from an asset server.
   # config.action_controller.asset_host = "http://assets.example.com"
 
   # Precompile additional assets.
   # application.js, application.css, and all non-JS/CSS in app/assets folder are already added.
   # config.assets.precompile += %w( search.js )
 
   # Ignore bad email addresses and do not raise email delivery errors.
   # Set this to true and configure the email server for immediate delivery to raise delivery errors.
   # config.action_mailer.raise_delivery_errors = false
 
   # Enable locale fallbacks for I18n (makes lookups for any locale fall back to
-  # the I18n.default_locale when a translation can not be found).
+  # the I18n.default_locale when a translation cannot be found).
   config.i18n.fallbacks = true
 
   # Send deprecation notices to registered listeners.
   config.active_support.deprecation = :notify
 
   # Disable automatic flushing of the log to improve performance.
   # config.autoflush_log = false
 
   # Use default logging formatter so that PID and timestamp are not suppressed.
   config.log_formatter = ::Logger::Formatter.new
+
+  # Do not dump schema after migrations.
+  config.active_record.dump_schema_after_migration = false
 end
diff -Nr -U 1000 v4.1.0.beta2/config/environments/test.rb v4.1.0.rc2/config/environments/test.rb
--- v4.1.0.beta2/config/environments/test.rb	2014-02-22 04:31:13.000000000 +0100
+++ v4.1.0.rc2/config/environments/test.rb	2014-03-25 22:39:16.000000000 +0100
@@ -1,36 +1,39 @@
 Rails.application.configure do
   # Settings specified here will take precedence over those in config/application.rb.
 
   # The test environment is used exclusively to run your application's
   # test suite. You never need to work with it otherwise. Remember that
   # your test database is "scratch space" for the test suite and is wiped
   # and recreated between test runs. Don't rely on the data there!
   config.cache_classes = true
 
   # Do not eager load code on boot. This avoids loading your whole application
   # just for the purpose of running a single test. If you are using a tool that
   # preloads Rails for running tests, you may have to set it to true.
   config.eager_load = false
 
   # Configure static asset server for tests with Cache-Control for performance.
   config.serve_static_assets  = true
-  config.static_cache_control = "public, max-age=3600"
+  config.static_cache_control = 'public, max-age=3600'
 
   # Show full error reports and disable caching.
   config.consider_all_requests_local       = true
   config.action_controller.perform_caching = false
 
   # Raise exceptions instead of rendering exception templates.
   config.action_dispatch.show_exceptions = false
 
   # Disable request forgery protection in test environment.
   config.action_controller.allow_forgery_protection = false
 
   # Tell Action Mailer not to deliver emails to the real world.
   # The :test delivery method accumulates sent emails in the
   # ActionMailer::Base.deliveries array.
   config.action_mailer.delivery_method = :test
 
   # Print deprecation notices to the stderr.
   config.active_support.deprecation = :stderr
+
+  # Raises error for missing translations
+  # config.action_view.raise_on_missing_translations = true
 end
diff -Nr -U 1000 v4.1.0.beta2/config/initializers/cookies_serializer.rb v4.1.0.rc2/config/initializers/cookies_serializer.rb
--- v4.1.0.beta2/config/initializers/cookies_serializer.rb	1970-01-01 01:00:00.000000000 +0100
+++ v4.1.0.rc2/config/initializers/cookies_serializer.rb	2014-03-25 22:39:16.000000000 +0100
@@ -0,0 +1,3 @@
+# Be sure to restart your server when you modify this file.
+
+Rails.application.config.action_dispatch.cookies_serializer = :json
\ No newline at end of file
diff -Nr -U 1000 v4.1.0.beta2/config/secrets.yml v4.1.0.rc2/config/secrets.yml
--- v4.1.0.beta2/config/secrets.yml	2014-02-22 04:31:13.000000000 +0100
+++ v4.1.0.rc2/config/secrets.yml	2014-03-25 22:39:16.000000000 +0100
@@ -1,20 +1,22 @@
 # Be sure to restart your server when you modify this file.
 
 # Your secret key is used for verifying the integrity of signed cookies.
 # If you change this key, all old signed cookies will become invalid!
 
 # Make sure the secret is at least 30 characters and all random,
 # no regular words or you'll be exposed to dictionary attacks.
 # You can use `rake secret` to generate a secure secret key.
 
 # Make sure the secrets in this file are kept private
 # if you're sharing your code publicly.
 
 development:
   secret_key_base: your-secret-token
 
 test:
   secret_key_base: your-secret-token
 
+# Do not keep production secrets in the repository,
+# instead read values from the environment.
 production:
-  secret_key_base: your-secret-token
+  secret_key_base: <%= ENV["SECRET_KEY_BASE"] %>
diff -Nr -U 1000 v4.1.0.beta2/test/test_helper.rb v4.1.0.rc2/test/test_helper.rb
--- v4.1.0.beta2/test/test_helper.rb	2014-02-22 04:31:13.000000000 +0100
+++ v4.1.0.rc2/test/test_helper.rb	2014-03-25 22:39:16.000000000 +0100
@@ -1,15 +1,13 @@
-ENV["RAILS_ENV"] ||= "test"
+ENV['RAILS_ENV'] ||= 'test'
 require File.expand_path('../../config/environment', __FILE__)
 require 'rails/test_help'
 
 class ActiveSupport::TestCase
-  ActiveRecord::Migration.check_pending!
-
   # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.
   #
   # Note: You'll currently still have to declare fixtures explicitly in integration tests
   # -- they do not yet inherit this setting
   fixtures :all
 
   # Add more helper methods to be used by all tests here...
 end
