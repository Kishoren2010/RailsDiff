{
"diffs": [
{
"filepath": ".gitignore",
"diff": "@@ -1,4 +1,4 @@\n .bundle\n db/*.sqlite3\n log/*.log\n-tmp/**/*\n+tmp/\n"
}
,
{
"filepath": "Gemfile",
"diff": "@@ -1,11 +1,11 @@\n source 'http://rubygems.org'\n \n-gem 'rails', '3.0.2'\n+gem 'rails', '3.0.9.rc5'\n \n # Bundle edge Rails instead:\n # gem 'rails', :git => 'git://github.com/rails/rails.git'\n \n-gem 'sqlite3-ruby', :require => 'sqlite3'\n+gem 'sqlite3'\n \n # Use unicorn as the web server\n # gem 'unicorn'\n@@ -15,7 +15,7 @@\n \n # To use debugger (ruby-debug for Ruby 1.8.7+, ruby-debug19 for Ruby 1.9.2+)\n # gem 'ruby-debug'\n-# gem 'ruby-debug19'\n+# gem 'ruby-debug19', :require => 'ruby-debug'\n \n # Bundle the extra gems:\n # gem 'bj'\n"
}
,
{
"filepath": "config/boot.rb",
"diff": "@@ -1,13 +1,6 @@\n require 'rubygems'\n \n # Set up gems listed in the Gemfile.\n-gemfile = File.expand_path('../../Gemfile', __FILE__)\n-begin\n-  ENV['BUNDLE_GEMFILE'] = gemfile\n-  require 'bundler'\n-  Bundler.setup\n-rescue Bundler::GemNotFound => e\n-  STDERR.puts e.message\n-  STDERR.puts \"Try running `bundle install`.\"\n-  exit!\n-end if File.exist?(gemfile)\n+ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../../Gemfile', __FILE__)\n+\n+require 'bundler/setup' if File.exists?(ENV['BUNDLE_GEMFILE'])\n"
}
,
{
"filepath": "config/database.yml",
"diff": "@@ -1,5 +1,5 @@\n # SQLite version 3.x\n-#   gem install sqlite3-ruby (not necessary on OS X Leopard)\n+#   gem install sqlite3\n development:\n   adapter: sqlite3\n   database: db/development.sqlite3\n"
}
,
{
"filepath": "public/javascripts/rails.js",
"diff": "@@ -172,4 +172,20 @@\n       input.disabled = false;\n     });\n   });\n+\n+  Ajax.Responders.register({\n+    onCreate: function(request) {\n+      var csrf_meta_tag = $$('meta[name=csrf-token]')[0];\n+\n+      if (csrf_meta_tag) {\n+        var header = 'X-CSRF-Token',\n+            token = csrf_meta_tag.readAttribute('content');\n+\n+        if (!request.options.requestHeaders) {\n+          request.options.requestHeaders = {};\n+        }\n+        request.options.requestHeaders[header] = token;\n+      }\n+    }\n+  });\n })();\n"
}
]
}
